{"version":3,"sources":["features/counter/counterSlice.js","App.js","AppConnect.js","reducer.js","store.js","index.js"],"names":["counterSlice","createSlice","name","initialState","counter","reducers","increment","state","decrement","actions","App","props","useSelector","reducerSlice","dispatch","useDispatch","className","onClick","connect","reducerConnect","plus","type","minus","configureStore","reducer","action","ReactDOM","render","store","StrictMode","document","getElementById"],"mappings":"sNAMaA,EAAeC,YAAY,CACpCC,KAAM,eACNC,aANiB,CACjBC,QAAS,GAMTC,SAAU,CACNC,UAAW,SAACC,GACRA,EAAMH,SAAW,GAErBI,UAAW,SAACD,GACRA,EAAMH,SAAW,MAKtB,EAAiCJ,EAAaS,QAAtCH,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,UACXR,IAAf,Q,OChBe,SAASU,EAAIC,GAE1B,IAAMP,EAAUQ,aAAY,SAACL,GAAD,OAAWA,EAAMM,aAAaT,WACpDU,EAAWC,cAUjB,OACE,qBAAKC,UAAU,MAAf,SACE,mCACE,qFACA,0EACcZ,KAEd,8BACI,wBAAQY,UAAU,aAAaC,QAAS,WAfhDH,EAASN,MAeD,eACA,wBAAQQ,UAAU,aAAaC,QAAS,WAZhDH,EAASR,MAYD,uBCQGY,mBAbf,SAA0BX,GACxB,MAAO,CACLH,QAASG,EAAMY,eAAef,YAIlC,SAA6BU,GAC3B,MAAO,CACLM,KAAM,kBAAMN,EAAS,CAAEO,KAAM,UAC7BC,MAAO,kBAAMR,EAAS,CAAEO,KAAM,cAInBH,EA/Bf,SAAoBP,GAElB,OACE,qBAAKK,UAAU,MAAf,SACE,mCACE,6EACA,0EACcL,EAAMP,WAEpB,8BACI,wBAAQY,UAAU,aAAaC,QAAS,kBAAIN,EAAMW,SAAlD,eACA,wBAAQN,UAAU,aAAaC,QAAS,kBAAIN,EAAMS,QAAlD,0B,OCdNjB,EAAe,CACjBC,QAAS,GCUEmB,kBAAe,CAC5BC,QAAS,CACPL,eDTW,WAAgD,IAA/BZ,EAA8B,uDAAtBJ,EAAcsB,EAAQ,uCAC1D,OAAQA,EAAOJ,MACb,IAAK,OACH,OAAO,2BACAd,GADP,IAEIH,QAASG,EAAMH,QAAU,IAE/B,IAAK,QACH,OAAO,2BACAG,GADP,IAEIH,QAASG,EAAMH,QAAU,IAE/B,QACE,OAAOG,ICHXM,aAAcA,KCLlBa,IAASC,OACP,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,SAGJC,SAASC,eAAe,U","file":"static/js/main.8ed238b6.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    counter: 0\r\n}\r\n\r\nexport const counterSlice = createSlice({\r\n    name: 'counterSlice',\r\n    initialState,\r\n    reducers: {\r\n        increment: (state) => {\r\n            state.counter += 1\r\n        },\r\n        decrement: (state) => {\r\n            state.counter -= 1\r\n        },\r\n    }\r\n})\r\n\r\nexport const { increment, decrement } = counterSlice.actions\r\nexport default counterSlice.reducer","import './App.css';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { decrement, increment } from './features/counter/counterSlice'\n\nexport default function App(props) {\n  \n  const counter = useSelector((state) => state.reducerSlice.counter)\n  const dispatch = useDispatch()\n\n  const onDecrement = () => {\n    dispatch(decrement())\n  }\n\n  const onIncrement = () => {\n    dispatch(increment())\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Cчетчик Redux-Toolkit</h1>\n        <div>\n            Cчетчик: {counter}\n        </div>\n        <p>\n            <button className=\"App-button\" onClick={()=>onDecrement()}>-</button>\n            <button className=\"App-button\" onClick={()=>onIncrement()}>+</button>\n        </p>\n      </header>\n    </div>\n  );\n}","import './App.css';\nimport { connect } from 'react-redux';\n\nfunction AppConnect(props) {\n  \n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Cчетчик Redux</h1>\n        <div>\n            Cчетчик: {props.counter}\n        </div>\n        <p>\n            <button className=\"App-button\" onClick={()=>props.minus()}>-</button>\n            <button className=\"App-button\" onClick={()=>props.plus()}>+</button>\n        </p>\n      </header>\n    </div>\n  );\n}\n\nfunction mapStateToProps (state) {\n  return {\n    counter: state.reducerConnect.counter\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    plus: () => dispatch({ type: 'PLUS' }),\n    minus: () => dispatch({ type: 'MINUS' }),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppConnect);","const initialState = {\r\n    counter: 0\r\n}\r\n  \r\nexport default function reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n      case \"PLUS\":\r\n        return {\r\n            ...state, \r\n            counter: state.counter + 1\r\n        };\r\n      case \"MINUS\":\r\n        return {\r\n            ...state, \r\n            counter: state.counter - 1\r\n        };\r\n      default: \r\n        return state;\r\n    }\r\n}","//import { createStore } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport reducerConnect from './reducer.js'; // redux\r\nimport reducerSlice  from './features/counter/counterSlice'; //redux-toolkit\r\n\r\n// const store = createStore (\r\n//     reducer,\r\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n// );\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    reducerConnect: reducerConnect,\r\n    reducerSlice: reducerSlice,\r\n  },\r\n})\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport AppConnect from './AppConnect';\n\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <AppConnect />\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}